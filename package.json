{
  "name": "jumpa",
  "displayName": "JumpA",
  "description": "üèÉ‚Äç‚ôÇÔ∏è Jump/Select to the Start/End of a word in VSCode",
  "version": "0.1.0",
  "publisher": "ragusaen",
  "icon": "images/icon.png",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/wenfangdu/vscode-jump"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "acejump",
    "code",
    "column",
    "cursor",
    "easymotion",
    "emacs",
    "end",
    "fast",
    "go",
    "jump",
    "jumpy",
    "keyboard",
    "line",
    "mark",
    "move",
    "movement",
    "navigation",
    "neovim",
    "productivity",
    "quick",
    "rapid",
    "select",
    "shortcut",
    "start",
    "to",
    "util",
    "utility",
    "vim",
    "word"
  ],
  "main": "./out/extension.js",
  "activationEvents": [],
  "contributes": {
    "commands": [
      {
        "command": "jump-extension.primary-jump",
        "title": "Jump using primary regexes"
      },
      {
        "command": "jump-extension.exit",
        "title": "Exit jump mode"
      },
      {
        "command": "jump-extension.search-jump",
        "title": "Jump using search"
      },
      {
        "command": "jump-extension.inline-jump",
        "title": "Jump within current line"
      }
    ],
    "keybindings": [
      {
        "key": "escape",
        "command": "jump-extension.exit",
        "when": "editorTextFocus && jump.isInJumpMode"
      },
      {
        "key": "space",
        "command": "jump-extension.exit",
        "when": "editorTextFocus && jump.isInJumpMode"
      },
      {
        "key": "enter",
        "command": "jump-extension.exit",
        "when": "editorTextFocus && jump.isInJumpMode"
      },
      {
        "key": "ctrl+;",
        "command": "jump-extension.primary-jump",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+;",
        "command": "jump-extension.search-jump",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+alt+;",
        "command": "jump-extension.inline-jump",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "Jump",
      "properties": {
        "jump.primaryCharset": {
          "type": "string",
          "pattern": "^(?:([a-z0-9])(?!.*\\1))+$",
          "patternErrorMessage": "Please enter unique characters from [a-z0-9].",
          "default": "jfkdlsaghrueiwoqptyvncmxzb",
          "description": "Set of characters used to create jump key combinations. The first letters will occur the closest to the last cursor position."
        },
        "jump.display.backgroundColor": {
          "type": "array",
          "default": ["#004455"],
          "description": "Background of decoration."
        },
        "jump.display.color": {
          "type": "array",
          "default": ["#0af0c1"],
          "description": "Text color of decoration."
        },
        "jump.display.fontScale": {
          "type": "number",
          "default": 0.6,
          "description": "Text color of decoration."
        },
        "jump.primaryRegexes": {
          "type": "array",
          "default": ["\\w+()"],
          "description": "List of regexes to use for normal jump. The jump happens to the last successfully matched group. For example, '\\w+()' jumps to the end of words; '\\[()\\]' jumps inside empty square brackets; '\\[()\\]|\\(()\\) jumps inside either empty square brackets or empty parentheses, depending on which case was matched."
        },
        "jump.inlineRegexes": {
          "type": "array",
          "default": ["\\w+()"],
          "description": "List of regexes to use for jump. See primaryRegexes for more detail."
        },
        "jump.wordRegexpFlags": {
          "type": "string",
          "default": "dg",
          "description": "Flags to use for regexes."
        },
        "jump.jumpCooldown": {
          "type": "integer",
          "default": 350,
          "description": "Time in milliseconds to cooldown after each key stroke when making a search jump. In this time, any keystroke will move the cursor right instead and reset the timer."
        }
      }
    }
  },
  "scripts": {
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "cross-env NODE_ENV=production eslint src --ext ts --fix",
    "test": "node ./out/test/runTest.js",
    "vscode:prepublish": "npm install && npm run lint && npm run compile"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^8.2.3",
    "@types/node": "^15.14.9",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^4.32.0",
    "@typescript-eslint/parser": "^4.32.0",
    "cross-env": "^7.0.3",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-prettier": "^3.4.1",
    "glob": "^7.2.0",
    "mocha": "^8.4.0",
    "prettier": "^2.4.1",
    "typescript": "^4.4.3",
    "vscode-test": "^1.6.1"
  }
}
